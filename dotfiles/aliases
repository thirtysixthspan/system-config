

alias hg='history | grep '
alias pp='ps ax | grep -v grep | grep '

alias be='bundle exec'
alias bi='bundle install'

alias ggrep_all="git rev-list --all | xargs git grep"
alias pp='ps ax | grep -v grep | grep '
alias sussh='eval `ssh-agent`;ssh-add '
alias publish="ssh thirtysixthspan 'cd thirtysixthspan.com; git pull; php artisan db:seed'"

alias webserver='ruby -run -e httpd . --port 8080'
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"

alias gs='git status'
alias gl='git log'
alias gau='git add -u; git add .; git status'
gc() { git commit -m "$@"; }
alias guc='git reset --soft HEAD^'
alias gp='git push'
alias git_show_last_commit="git diff HEAD^ HEAD"
alias git_step_back_one_commit="git reset HEAD~"
alias git_rename_branch="git branch -m"
alias git_show_staged="git diff --staged"
alias git_log_graph="git log --graph --oneline --decorate --date-order --color --boundary @{u}"

# modified files in work area
alias gmf='git ls-files -m'
# untracked files in work area
alias guf='git ls-files --others --exclude-standard'
# work files - unstaged files in work area
alias gwf='git ls-files -m; git ls-files --others --exclude-standard'
# working specs - spec files in work area that are not yet committed
alias gws='(git ls-files -m; git ls-files --others --exclude-standard) | egrep "_spec.rb$"'
# branch specs - committed spec files in current branch but not in master
alias gbs='git log --name-status master.. |egrep "^[MA].+spec.rb$" |cut -f2 | uniq | sed "s/hr_suite\///"'
# run working specs through rspec
alias rspec_working='echo "Running the following working specs" ; echo `gws` | tr " " "\n" ; echo ; bundle exec rspec `gws`'
# run branch specs through rspec
alias rspec_branch='echo "Running the following branch specs" ; echo `gbs` | tr " " "\n" ; echo ; bundle exec rspec `gbs`'

# git log formatted
alias glf="git log --format='format: * %s (%an: %ad) [%h]' --no-merges"

function who_wrote_this_code { find $1 \( ! -regex '.*/\..*' \) -name '*.rb' -type f -print -exec git blame '{}' \; | ruby -pe "sub /(^.*\((.*?)\s+2.*$)/, '\2'" | egrep -vE '[[:punct:][:digit:]]' | sort | uniq -c | sort -nr; }


alias kill_bundle="ps aux | grep 'bundle exec' | grep -v 'grep' | awk '{print $2}' | xargs kill -9"
alias kill_rails="ps aux | grep 'rails s' | grep -v 'grep' | awk '{print $2}' | xargs kill -9"
alias kill_ruby="ps aux | grep 'ruby' | grep -v 'grep' | awk '{print $2}' | xargs kill -9"
alias kill_resque="ps aux | grep 'resqu' | grep -v 'grep' | awk '{print $2}' | xargs kill -9"

alias find_changed_files_linux="find . -type f -printf '%TY-%Tm-%Td %TT %p\n' | sort -r | more"


# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

